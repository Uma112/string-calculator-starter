<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="8" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-10-17T12:49:06 IST" name="Default suite" finished-at="2021-10-17T12:49:06 IST" duration-ms="151">
    <groups>
    </groups>
    <test started-at="2021-10-17T12:49:06 IST" name="Default test" finished-at="2021-10-17T12:49:06 IST" duration-ms="151">
      <class name="calculator.StringCalculatorShould">
        <test-method signature="Numbers_GreaterThan_1000()[pri:0, instance:calculator.StringCalculatorShould@3cc1435c]" started-at="2021-10-17T12:49:06 IST" name="Numbers_GreaterThan_1000" finished-at="2021-10-17T12:49:06 IST" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Numbers_GreaterThan_1000 -->
        <test-method signature="Numbers_NewLine_Delimited_ReturnsSum()[pri:0, instance:calculator.StringCalculatorShould@3cc1435c]" started-at="2021-10-17T12:49:06 IST" name="Numbers_NewLine_Delimited_ReturnsSum" finished-at="2021-10-17T12:49:06 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Numbers_NewLine_Delimited_ReturnsSum -->
        <test-method signature="Numbers_semicol_Delimited_ReturnsSum()[pri:0, instance:calculator.StringCalculatorShould@3cc1435c]" started-at="2021-10-17T12:49:06 IST" name="Numbers_semicol_Delimited_ReturnsSum" finished-at="2021-10-17T12:49:06 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Numbers_semicol_Delimited_ReturnsSum -->
        <test-method signature="amountofNumbers_CommaDelimited_ReturnsSum()[pri:0, instance:calculator.StringCalculatorShould@3cc1435c]" started-at="2021-10-17T12:49:06 IST" name="amountofNumbers_CommaDelimited_ReturnsSum" finished-at="2021-10-17T12:49:06 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- amountofNumbers_CommaDelimited_ReturnsSum -->
        <test-method signature="empty_string_should_return_0()[pri:0, instance:calculator.StringCalculatorShould@3cc1435c]" started-at="2021-10-17T12:49:06 IST" name="empty_string_should_return_0" finished-at="2021-10-17T12:49:06 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- empty_string_should_return_0 -->
        <test-method signature="negative_Input_Returns_Exception()[pri:0, instance:calculator.StringCalculatorShould@3cc1435c]" started-at="2021-10-17T12:49:06 IST" name="negative_Input_Returns_Exception" finished-at="2021-10-17T12:49:06 IST" duration-ms="6" status="PASS">
          <exception class="java.lang.Exception">
            <message>
              <![CDATA[negatives not allowed]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Exception: negatives not allowed
at calculator.StringCalculator.checkNegativeNumber(StringCalculator.java:40)
at calculator.StringCalculator.getSum(StringCalculator.java:26)
at calculator.StringCalculator.add(StringCalculator.java:18)
at calculator.StringCalculatorShould.negative_Input_Returns_Exception(StringCalculatorShould.java:49)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Exception -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- negative_Input_Returns_Exception -->
        <test-method signature="string_with_single_number_should_return_number_as_int()[pri:0, instance:calculator.StringCalculatorShould@3cc1435c]" started-at="2021-10-17T12:49:06 IST" name="string_with_single_number_should_return_number_as_int" finished-at="2021-10-17T12:49:06 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- string_with_single_number_should_return_number_as_int -->
        <test-method signature="twoNumbers_Comma_Delimited_Returns_Sum()[pri:0, instance:calculator.StringCalculatorShould@3cc1435c]" started-at="2021-10-17T12:49:06 IST" name="twoNumbers_Comma_Delimited_Returns_Sum" finished-at="2021-10-17T12:49:06 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twoNumbers_Comma_Delimited_Returns_Sum -->
      </class> <!-- calculator.StringCalculatorShould -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
